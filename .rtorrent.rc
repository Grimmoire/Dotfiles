# This is an example resource file for rTorrent. Copy to
# ~/.rtorrent.rc and enable/modify the options as needed. Remember to
# uncomment the options you wish to enable.

# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 40
#max_peers = 100

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 10
#max_peers_seed = 50

# Maximum number of simultanious uploads per torrent.
#max_uploads = 15

# Global upload and download rate in KiB. "0" for unlimited.
#download_rate = 0
#upload_rate = 0

# Default directory to save the downloaded torrents.
directory = /home/jason/torrents/finished

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = /home/jason/torrents/sessions

# Watch a directory for new torrents, and stop those that have been
# deleted.
schedule = watch_directory,5,5,load_start=/home/jason/torrents/watch/*.torrent
schedule = untied_directory,5,5,stop_untied=

#
# PyroScope SETTINGS
#

# Set "pyro.extended" to 1 to activate rTorrent-PS features!
# LEAVE THIS AT 0 IF YOU RUN A VANILLA rTorrent!
system.method.insert = pyro.extended, value|const, 1 

# Set "pyro.bin_dir" to the "bin" directory where you installed the pyrocore tools!
# Make sure you end it with a "/"; if this is left empty, then the shell's path is searched.
system.method.insert = pyro.bin_dir, string|const, 

# TORQUE: Daemon watchdog schedule
# Must be activated by touching the "~/.pyroscope/run/pyrotorque" file!
# Set the second argument to "-v" or "-q" to change log verbosity.
schedule = pyro_watchdog,30,300,"pyro.watchdog=~/.pyroscope,"

# Close torrents when diskspace is low.
#schedule = low_diskspace,5,60,close_low_diskspace=100M

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = rakshasa.no

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1
#bind = rakshasa.no

# Port range to use for listening.
#port_range = 6890-6999

# Start opening ports at a random position within the port range.
#port_random = no

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
#check_hash = no

# Set whether the client should try to connect to UDP trackers.
#use_udp_trackers = yes

# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
# encryption = allow_incoming,enable_retry,prefer_plaintext

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
# dht = auto

# UDP port to use for DHT. 
# 
# dht_port = 6881

# Enable peer exchange (for torrents not marked private)
#
# peer_exchange = yes

#throttle.max_peers.normal.set        = 50
#throttle.max_peers.seed.set          = 50
#throttle.max_uploads.global.set      = 250
#throttle.max_downloads.global.set    = 250

#throttle.global_down.max_rate.set_kb = 5000
#throttle.global_up.max_rate.set_kb   = 5000

network.port_range.set               = 36767-36767
network.port_random.set              = no
network.http.ssl_verify_peer.set     = no
network.http.dns_cache_timeout.set   = 25
network.xmlrpc.size_limit.set        = 2M

file.prioritize_toc           = 1
pieces.hash.on_completion.set = no
system.umask.set              = 0027
#system.file.allocate.set      = yes
dht.mode.set                  = auto
protocol.pex.set              = no
protocol.encryption.set       = allow_incoming,try_outgoing,enable_retry
#protocol.encryption.set       = allow_incoming,try_outgoing,require,require_RC4

#directory.default.set   = ~/.rtorrent/downloads
#session.path.set        = ~/.rtorrent/session
#network.scgi.open_local = ~/.rtorrent/rtorrent.sock
#ipv4_filter.load        = ~/.rtorrent/ipfilter, unwanted

# example logging
#log.open_file = "rtorrent.log", (cat,/tmp/rtorrent.log.,(system.pid))
#critical error warn notice info debug
#log.add_output = "info", "rtorrent.log"
#connection_* dht_*" peer_* rpc_* storage_* thread_* tracker_* torrent_*
#log.add_output = "torrent_debug", "tracker.log"
#log.add_output = "tracker_debug", "tracker.log"
#log.open_file = "rtorrent", ~/.rtorrent/logs/rtorrent.log
#log.add_output = "warn", "rtorrent"

